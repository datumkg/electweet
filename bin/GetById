#!/usr/bin/env python
import sys
import json

usage = """Usage: ./GetById outputPrefix listfile.json [-c credfile.json]"""

if len(sys.argv) < 2:
    print(usage)
    sys.exit(0)

argc = 1
outf = sys.argv[argc]
argc += 1

inf = open(sys.argv[argc])
twlst = json.load(inf)
inf.close()
argc += 1

credFile = 'data/credentials.json'
if len(sys.argv) > argc and sys.argv[argc] == '-c':
    credFile = sys.argv[argc+1]

crd = json.load(open(credFile))

import tweepy
from tweepy import OAuthHandler
from tweepy import Stream

auth = OAuthHandler(crd['consumer_key'], crd['consumer_secret'])
auth.set_access_token(crd['access_token'], crd['access_token_secret'])

api = tweepy.API(auth,wait_on_rate_limit=True)

result = []
needed_ids = set(twlst)
gotten_ids = set()
redives = 0
max_redives = 10
while True:
    print("Getting next "+str(len(twlst[0:100]))+" tweets....")
    res = api.statuses_lookup(twlst[0:100])
    print("Obtained "+str(len(res))+" tweets.")
    result += res
    twlst = twlst[100:]
    if len(twlst) == 0: 
        """
        redives += 1
        gotten_ids = set([a._json['id'] for a in result if 'id' in a._json])
        twlst = list(needed_ids - gotten_ids)
        if len(twlst) > 0 and redives < max_redives:
            print("rediving")
            continue
        """
        print("done rediving - or done with tweet retrieval")
        break

#for tweet in cursor.items():
#    result.append(tweet)

result = [elm._json for elm in result]
f = open(outf,'w')
json.dump(result,f)
f.close()
